read.table("clinical.tsv")
# 1 - Packages
```{r}
clinical <- read.delim("~/Documentos/GitHub/Extra-o_Work/clinical.project-TCGA-GBM.2023-03-31/clinical.tsv", header=FALSE)
View(clinical)
clinical_clinical = read.delim("~/Documentos/GitHub/Extra-o_Work/clinical.project-TCGA-GBM.2023-03-31/clinical.tsv", header=TRUE)
clinical_clinical = read.delim("~/Documentos/GitHub/Extra-o_Work/clinical.project-TCGA-GBM.2023-03-31/clinical.tsv", header=TRUE)
clinical_clinical
clinical_family_history = read.delim("~/Documentos/GitHub/Extra-o_Work/clinical.project-TCGA-GBM.2023-03-31/family_history.tsv", header=TRUE)
clinical_exposure = read.delim("~/Documentos/GitHub/Extra-o_Work/clinical.project-TCGA-GBM.2023-03-31/exposure.tsv", header=TRUE)
View(clinical_exposure)
View(clinical_exposure)
View(clinical_family_history)
clinical_exposure
clinical_clinical = read.delim("~/Documentos/GitHub/Extra-o_Work/clinical.project-TCGA-GBM.2023-03-31/clinical.tsv", header=TRUE)
clinical_exposure = read.delim("~/Documentos/GitHub/Extra-o_Work/clinical.project-TCGA-GBM.2023-03-31/exposure.tsv", header=TRUE)
clinical_exposure
clinical_exposure
aliquot <- read.delim("~/Documentos/GitHub/Extra-o_Work/biospecimen.project-TCGA-GBM.2023-03-31/aliquot.tsv")
View(aliquot)
View(aliquot)
View(aliquot)
project_clinical = read.delim("~/Documentos/GitHub/Extra-o_Work/biospecimen.project-TCGA-GBM.2023-03-31/aliquot.tsv", header=TRUE)
project_clinical = read.delim("~/Documentos/GitHub/Extra-o_Work/biospecimen.project-TCGA-GBM.2023-03-31/analyte.tsv", header=TRUE)
project_clinical = read.delim("~/Documentos/GitHub/Extra-o_Work/biospecimen.project-TCGA-GBM.2023-03-31/portion.tsv", header=TRUE)
project_clinical = read.delim("~/Documentos/GitHub/Extra-o_Work/biospecimen.project-TCGA-GBM.2023-03-31/sample.tsv", header=TRUE)
project_clinical = read.delim("~/Documentos/GitHub/Extra-o_Work/biospecimen.project-TCGA-GBM.2023-03-31/slide.tsv", header=TRUE)
project_aliquot = read.delim("~/Documentos/GitHub/Extra-o_Work/biospecimen.project-TCGA-GBM.2023-03-31/aliquot.tsv", header=TRUE)
project_analyte = read.delim("~/Documentos/GitHub/Extra-o_Work/biospecimen.project-TCGA-GBM.2023-03-31/analyte.tsv", header=TRUE)
project_portion = read.delim("~/Documentos/GitHub/Extra-o_Work/biospecimen.project-TCGA-GBM.2023-03-31/portion.tsv", header=TRUE)
project_sample = read.delim("~/Documentos/GitHub/Extra-o_Work/biospecimen.project-TCGA-GBM.2023-03-31/sample.tsv", header=TRUE)
project_slide = read.delim("~/Documentos/GitHub/Extra-o_Work/biospecimen.project-TCGA-GBM.2023-03-31/slide.tsv", header=TRUE)
clinical_clinical
dim(clinical_clinical)
clinical_clinical_semna = read.delim("~/Documentos/GitHub/Extra-o_Work/clinical.project-TCGA-GBM.2023-03-31/clinical.tsv", header=TRUE, )
clinical_clinical_semna = read.delim("~/Documentos/GitHub/Extra-o_Work/clinical.project-TCGA-GBM.2023-03-31/clinical.tsv", header=TRUE)
clinical_clinical_semna = na.omit(clinical_clinical_semna)
clinical_clinical_semna
clinical_clinical
View(aliquot)
View(clinical_clinical)
clinical_clinical_semna
View(clinical_clinical_semna)
View(clinical_clinical_semna)
table(clinical_clinical_semna$age_is_obfuscated)
clinical_clinical_semna$age_is_obfuscated = NULL
clinical_clinical_semna
a = cause_of_death
a = "cause_of_death"
table(clinical_clinical_semna$a)
table(clinical_clinical_semna$cause_of_death)
clinical_clinical_semna$cause_of_death = NULL
table(clinical_clinical_semna)
set(clinical_clinical_semna)
table(clinical_clinical_semna$cause_of_death_source)
table(clinical_clinical_semna$cause_of_death_source)
clinical_clinical_semna$cause_of_death_source = NULL
table(clinical_clinical_semna$country_of_residence_at_enrollment)
table(clinical_clinical_semna$cause_of_death)
clinical_clinical_semna$cause_of_death = NULL
table(clinical_clinical_semna$cause_of_death_source)
clinical_clinical_semna$cause_of_death_source = NULL
clinical_clinical_semna$country_of_residence_at_enrollment = NULL
table(clinical_clinical_semna$country_of_residence_at_enrollment)
clinical_clinical_semna = na.omit(clinical_clinical_semna)
clinical_clinical_semna = read.delim("~/Documentos/GitHub/Extra-o_Work/clinical.project-TCGA-GBM.2023-03-31/clinical.tsv", header=TRUE)
clinical_clinical_semna = na.omit(clinical_clinical_semna)
clinical_clinical_semna
clinical_clinical_semna
table(clinical_clinical_semna$age_is_obfuscated)
clinical_clinical_semna$age_is_obfuscated = NULL
table(clinical_clinical_semna$cause_of_death)
clinical_clinical_semna$cause_of_death = NULL
table(clinical_clinical_semna$cause_of_death_source)
clinical_clinical_semna$cause_of_death_source = NULL
table(clinical_clinical_semna$country_of_residence_at_enrollment)
clinical_clinical_semna$country_of_residence_at_enrollment = NULL
table(clinical_clinical_semna$occupation_duration_years)
treatment(clinical_clinical_semna)
treatment = function(df){
for (colname in colnames(df)){
col = df[[colname]]
table_col = table(col)
print(table_col)
}
}
treatment(clinical_clinical_semna)
print("----------------------------")
print(table_col)
for (colname in colnames(df)){
col = df[[colname]]
table_col = table(col)
print("----------------------------")
print(table_col)
}
treatment = function(df){
for (colname in colnames(df)){
col = df[[colname]]
table_col = table(col)
print("----------------------------")
print(table_col)
}
}
treatment(clinical_clinical_semna)
clinical_clinical_semna = read.delim("~/Documentos/GitHub/Extra-o_Work/clinical.project-TCGA-GBM.2023-03-31/clinical.tsv", header=TRUE)
clinical_clinical_semna
clinical_clinical_semna
for (colname in colnames(df)){
col = df[[colname]]
table_col = table(col)
print("----------------------------")
print(table_col)
}
treatment = function(df){
for (colname in colnames(df)){
col = df[[colname]]
table_col = table(col)
print("----------------------------")
print(table_col)
}
}
treatment(clinical_clinical_semna)
checker = lenght(unique((col)) == 1)
checker = len(unique((col)) == 1)
checker = length(unique((col)) == 1)
print("----------------------------")
treatment = function(df){
for (colname in colnames(df)){
col = df[[colname]]
checker = length(unique((col)) == 1)
print("----------------------------")
print(table_col)
}
}
treatment(clinical_clinical_semna)
print(checker)
checker = length(unique((col)))
print("----------------------------")
print(checker)
for (colname in colnames(df)){
col = df[[colname]]
checker = length(unique((col)))
print("----------------------------")
print(checker)
}
treatment = function(df){
for (colname in colnames(df)){
col = df[[colname]]
checker = length(unique((col)))
print("----------------------------")
print(checker)
}
}
treatment(clinical_clinical_semna)
treatment = function(df){
for (colname in colnames(df)){
col = df[[colname]]
checker = length(unique((col)))
print("----------------------------")
print(checker)
}
}
treatment(clinical_clinical_semna)
clear
treatment = function(df){
for (colname in colnames(df)){
col = df[[colname]]
checker = length(unique((col)))
print("----------------------------")
print(checker)
}
}
treatment(clinical_clinical_semna)
treatment = function(df){
for (colname in colnames(df)){
col = df[[colname]]
checker = length(unique((col)))
if (checker == 1){
df$colname = NULL
}
print("----------------------------")
print(checker)
}
}
treatment = function(df){
for (colname in colnames(df)){
col = df[[colname]]
checker = length(unique((col)))
if (checker == 1){
df$colname = NULL
}
}
}
treatment(clinical_clinical_semna)
clinical_clinical_semna
treatment = function(df){
for (colname in colnames(df)){
col = df[[colname]]
checker = length(unique((col)))
if (checker == 1){
col = NULL
}
}
}
treatment(clinical_clinical_semna)
clinical_clinical_semna
treatment(clinical_clinical_semna)
clinical_clinical_semna
unique(clinical_clinical$project_id)
treatment = function(df){
for (colname in colnames(df)){
col = df[[colname]]
checker = length(unique((col)))
if (checker == 1){
print("banana")
col = NULL
}
}
}
treatment(clinical_clinical_semna)
treatment = function(df){
for (colname in colnames(df)){
col = df[[colname]]
checker = length(unique((col)))
if (checker == 1){
print("banana")
df[[colname]] = NULL
}
}
}
treatment(clinical_clinical_semna)
clinical_clinical_semna
treatment = function(df){
for (colname in colnames(df)){
col = df[[colname]]
checker = length(unique((col)))
if (checker == 1){
df$colname = NULL
}
}
}
treatment(clinical_clinical_semna)
clinical_clinical_semna
clinical_clinical_semna = treatment(clinical_clinical_semna)
clinical_clinical_semna
treatment = function(df){
for (colname in colnames(df)){
col = df[[colname]]
checker = length(unique((col)))
if (checker == 1){
col = NULL
}
}
}
clinical_clinical_semna = treatment(clinical_clinical_semna)
clinical_clinical_semna
clinical_clinical_semna = read.delim("~/Documentos/GitHub/Extra-o_Work/clinical.project-TCGA-GBM.2023-03-31/clinical.tsv", header=TRUE)
clinical_clinical_semna
treatment = function(df){
for (colname in colnames(df)){
col = df[[colname]]
checker = length(unique((col)))
if (checker == 1){
col = NULL
}
}
}
clinical_clinical_testasaa = treatment(clinical_clinical_semna)
clinical_clinical_testasaa
clinical_clinical_semna = read.delim("~/Documentos/GitHub/Extra-o_Work/clinical.project-TCGA-GBM.2023-03-31/clinical.tsv", header=TRUE)
treatment = function(df){
for (colname in colnames(df)){
col = df[[colname]]
checker = length(unique((col)))
if (checker == 1){
print("banana")
}
}
}
clinical_clinical_testasaa = treatment(clinical_clinical_semna)
clinical_clinical_testasaa
treatment = function(df){
for (colname in colnames(df)){
col = df[[colname]]
checker = length(unique(col))
if (checker == 1){
print("banana")
}
}
}
clinical_clinical_testasaa = treatment(clinical_clinical_semna)
clinical_clinical_testasaa
treatment = function(df){
cols_delete = sapply(df, function(x) length(unique(x))) == 1
df = df[, !cols_delete]
}
clinical_clinical_testasaa = treatment(clinical_clinical_semna)
clinical_clinical_testasaa
`1076483a.e462.47e5.a47a.ca9544548dff.rna_seq.augmented_star_gene_counts` <- read.delim("~/Documentos/GitHub/Extra-o_Work/gdc_download_20230331_112219.521695/ddb16b8d-9ad8-4c66-a986-513d3507b26d/1076483a-e462-47e5-a47a-ca9544548dff.rna_seq.augmented_star_gene_counts.tsv", comment.char="#")
View(`1076483a.e462.47e5.a47a.ca9544548dff.rna_seq.augmented_star_gene_counts`)
View(`1076483a.e462.47e5.a47a.ca9544548dff.rna_seq.augmented_star_gene_counts`)
expression_data = read.delim("~/Documentos/GitHub/Extra-o_Work/gdc_download_20230331_112219.521695/ddb16b8d-9ad8-4c66-a986-513d3507b26d/1076483a-e462-47e5-a47a-ca9544548dff.rna_seq.augmented_star_gene_counts.tsv"
expression_data
expression_data = read.delim("~/Documentos/GitHub/Extra-o_Work/gdc_download_20230331_112219.521695/ddb16b8d-9ad8-4c66-a986-513d3507b26d/1076483a-e462-47e5-a47a-ca9544548dff.rna_seq.augmented_star_gene_counts.tsv"
expression_data = read.delim("~/Documentos/GitHub/Extra-o_Work/gdc_download_20230331_112219.521695/ddb16b8d-9ad8-4c66-a986-513d3507b26d/1076483a-e462-47e5-a47a-ca9544548dff.rna_seq.augmented_star_gene_counts.tsv")
expression_data = read.delim("~/Documentos/GitHub/Extra-o_Work/gdc_download_20230331_112219.521695/ddb16b8d-9ad8-4c66-a986-513d3507b26d/1076483a-e462-47e5-a47a-ca9544548dff.rna_seq.augmented_star_gene_counts.tsv")
expression_data = read.delim("~/Documentos/GitHub/Extra-o_Work/gdc_download_20230331_112219.521695/ddb16b8d-9ad8-4c66-a986-513d3507b26d/1076483a-e462-47e5-a47a-ca9544548dff.rna_seq.augmented_star_gene_counts.tsv")
expression_data = read.delim("~/Documentos/GitHub/Extra-o_Work/gdc_download_20230331_112219.521695/ddb16b8d-9ad8-4c66-a986-513d3507b26d/1076483a-e462-47e5-a47a-ca9544548dff.rna_seq.augmented_star_gene_counts.tsv", comment.char="#")
expression_data
View(expression_data)
View(expression_data)
View(clinical_clinical)
View(clinical_clinical)
treatment_unique_colums(clinical_clinical)
treatment_unique_colums(clinical_exposure)
treatment_unique_colums(project_aliquot)
treatment_unique_colums(project_analyte)
treatment_unique_colums = function(df){
cols_delete = sapply(df, function(x) length(unique(x))) == 1
df = df[, !cols_delete]
}
treatment_unique_colums(clinical_clinical)
treatment_unique_colums(clinical_exposure)
treatment_unique_colums(project_aliquot)
treatment_unique_colums(project_analyte)
treatment_unique_colums(project_clinical)
treatment_unique_colums(project_portion)
treatment_unique_colums(project_slide)
rnaseq_teste = read_csv("CCLE_expression_lixo_lixo.csv")
rnaseq_teste = read_csv("CCLE_expression_lixo_lixo.csv")
rnaseq_teste = read.csv("CCLE_expression_lixo_lixo.csv")
dim(rnaseq_teste)
rnaseq_teste
clinical_clinical = read.delim("~/Documentos/GitHub/Extra-o_Work/clinical.project-TCGA-GBM.2023-03-31/clinical.tsv", header=TRUE)
clinical_exposure = read.delim("~/Documentos/GitHub/Extra-o_Work/clinical.project-TCGA-GBM.2023-03-31/exposure.tsv", header=TRUE)
clinical_clinical = read.delim("~/Documentos/GitHub/Extra-o_Work/clinical.project-TCGA-GBM.2023-03-31/clinical.tsv", header=TRUE)
clinical_exposure = read.delim("~/Documentos/GitHub/Extra-o_Work/clinical.project-TCGA-GBM.2023-03-31/exposure.tsv", header=TRUE)
#2.2 Import dos Dados Project
```{r}
project_aliquot = read.delim("~/Documentos/GitHub/Extra-o_Work/biospecimen.project-TCGA-GBM.2023-03-31/aliquot.tsv", header=TRUE)
project_analyte = read.delim("~/Documentos/GitHub/Extra-o_Work/biospecimen.project-TCGA-GBM.2023-03-31/analyte.tsv", header=TRUE)
project_portion = read.delim("~/Documentos/GitHub/Extra-o_Work/biospecimen.project-TCGA-GBM.2023-03-31/portion.tsv", header=TRUE)
project_sample = read.delim("~/Documentos/GitHub/Extra-o_Work/biospecimen.project-TCGA-GBM.2023-03-31/sample.tsv", header=TRUE)
project_slide = read.delim("~/Documentos/GitHub/Extra-o_Work/biospecimen.project-TCGA-GBM.2023-03-31/slide.tsv", header=TRUE)
#2.3  Import Expression Data
```{r}
expression_data = read.delim("~/Documentos/GitHub/Extra-o_Work/gdc_download_20230331_112219.521695/ddb16b8d-9ad8-4c66-a986-513d3507b26d/1076483a-e462-47e5-a47a-ca9544548dff.rna_seq.augmented_star_gene_counts.tsv", comment.char="#")
expression_data
rnaseq_teste
rnaseq_teste
boxplot(rnaseq_teste)
plot(rnaseq_teste)
dados = getGDCprojects()
dados = getGDCprojects = "TCGA-GBM"
dados = getGDCprojects = "TCGA-GBM", data.category = "Transcriptome Profiling")
dados = GDCquery(project = "TCGA-GBM", data.category = "Transcriptome Profiling")
gdcprojects = getGDCprojects()
library(TCGAbiolinks)
gdcprojects = getGDCprojects()
dados = GDCquery(project = "TCGA-GBM", data.category = "Transcriptome Profiling")
output = getResults(dados)
output
dados = GDCquery(project = "TCGA-GBM", data.category = "Transcriptome Profiling", acess = "open")
dados = GDCquery(project = "TCGA-GBM", data.category = "Transcriptome Profiling", access = "open")
output = getResults(dados)
output
GDCdownload(output)
GDCdownload(query)
gdcprojects = getGDCprojects()
gdcprojects = getGDCprojects()
query = GDCquery(project = "TCGA-GBM", data.category = "Transcriptome Profiling", access = "open")
gdcprojects = getGDCprojects()
query = GDCquery(project = "TCGA-GBM", data.category = "Transcriptome Profiling", access = "open")
output = getResults(query)
GDCdownload(query)
library(TCGAbiolinks)
gdcprojects = getGDCprojects()
query = GDCquery(project = "TCGA-GBM", data.category = "Transcriptome Profiling",experimental.strategy = "RNA-Seq", access = "open")
output = getResults(query)
GDCdownload(query)
GDCdownload(query)
library(SummarizedExperiment)
data = GCDprepare(query, SummarizedExperiment = TRUE)
library(TCGAbiolinks)
data = GCDprepare(query, SummarizedExperiment = TRUE)
data = GDCprepare(query, SummarizedExperiment = TRUE)
data = GDCprepare(query, summarizedExperiment = TRUE)
data_mat = assay(data)
data_mat
data
data_mat = assay(data, "unstranded" )
data_mat
query = GDCquery(project = "TCGA-GBM", data.category = "Clinical",experimental.strategy = "RNA-Seq", access = "open")
query = GDCquery(project = "TCGA-GBM", data.category = "Clinical",experimental.strategy = "RNA-Seq", access = "open")
query = GDCquery(project = "TCGA-GBM", data.category = "Clinical", access = "open")
query = GDCquery(project = "TCGA-GBM", data.category = "Clinical", access = "open")
output = getResults(query)
output
GDCdownload(query)
data_mat = assay(data, "unstranded" )
data_mat
